%------------------------------------------------------------------------------
% File     : BOO004-2 : TPTP v7.3.0. Released v1.0.0.
% Domain   : Boolean Algebra
% Problem  : Addition is idempotent (X + X = X)
% Version  : [ANL] (equality) axioms.
% English  :

% Refs     :
% Source   : [ANL]
% Names    : prob2_part2.ver2.in [ANL]

% Status   : Unsatisfiable
% Rating   : 0.04 v7.3.0, 0.00 v7.0.0, 0.05 v6.3.0, 0.06 v6.2.0, 0.07 v6.1.0, 0.06 v6.0.0, 0.14 v5.5.0, 0.11 v5.4.0, 0.00 v2.1.0, 0.13 v2.0.0
% Syntax   : Number of clauses     :   15 (   0 non-Horn;  15 unit;   1 RR)
%            Number of atoms       :   15 (  15 equality)
%            Maximal clause size   :    1 (   1 average)
%            Number of predicates  :    1 (   0 propositional; 2-2 arity)
%            Number of functors    :    6 (   3 constant; 0-2 arity)
%            Number of variables   :   24 (   0 singleton)
%            Maximal term depth    :    3 (   2 average)
% SPC      : CNF_UNS_RFO_PEQ_UEQ

% Comments :
%          : tptp2X 
%------------------------------------------------------------------------------
cnf(commutativity_of_add,axiom,
    ( add(X,Y) = add(Y,X) )).

cnf(commutativity_of_multiply,axiom,
    ( multiply(X,Y) = multiply(Y,X) )).

cnf(distributivity1,axiom,
    ( add(multiply(X,Y),Z) = multiply(add(X,Z),add(Y,Z)) )).

cnf(distributivity2,axiom,
    ( add(X,multiply(Y,Z)) = multiply(add(X,Y),add(X,Z)) )).

cnf(distributivity3,axiom,
    ( multiply(add(X,Y),Z) = add(multiply(X,Z),multiply(Y,Z)) )).

cnf(distributivity4,axiom,
    ( multiply(X,add(Y,Z)) = add(multiply(X,Y),multiply(X,Z)) )).

cnf(additive_inverse1,axiom,
    ( add(X,inverse(X)) = multiplicative_identity )).

cnf(additive_inverse2,axiom,
    ( add(inverse(X),X) = multiplicative_identity )).

cnf(multiplicative_inverse1,axiom,
    ( multiply(X,inverse(X)) = additive_identity )).

cnf(multiplicative_inverse2,axiom,
    ( multiply(inverse(X),X) = additive_identity )).

cnf(multiplicative_id1,axiom,
    ( multiply(X,multiplicative_identity) = X )).

cnf(multiplicative_id2,axiom,
    ( multiply(multiplicative_identity,X) = X )).

cnf(additive_id1,axiom,
    ( add(X,additive_identity) = X )).

cnf(additive_id2,axiom,
    ( add(additive_identity,X) = X )).

cnf(prove_a_plus_a_is_a,negated_conjecture,
    ( add(a,a) != a )).
%------------------------------------------------------------------------------
