%------------------------------------------------------------------------------
% File     : GEO018-3 : TPTP v7.3.0. Released v1.0.0.
% Domain   : Geometry
% Problem  : Corollary 2 to symmetries of equidistance
% Version  : [Qua89] axioms : Augmented.
% English  : Show that if the distance from A to B equals the distance
%            from C to D, then the distance from B to A equals the
%            distance from D to C.

% Refs     : [SST83] Schwabbauser et al. (1983), Metamathematische Methoden
%          : [Qua89] Quaife (1989), Automated Development of Tarski's Geome
% Source   : [Qua89]
% Names    : D4.2 [Qua89]

% Status   : Unsatisfiable
% Rating   : 0.00 v7.0.0, 0.07 v6.4.0, 0.00 v6.2.0, 0.10 v6.1.0, 0.07 v6.0.0, 0.10 v5.3.0, 0.11 v5.2.0, 0.12 v5.0.0, 0.07 v4.1.0, 0.08 v4.0.1, 0.09 v3.7.0, 0.00 v3.3.0, 0.07 v3.2.0, 0.00 v3.1.0, 0.09 v2.7.0, 0.08 v2.6.0, 0.00 v2.0.0
% Syntax   : Number of clauses     :   23 (   5 non-Horn;   9 unit;  19 RR)
%            Number of atoms       :   63 (   7 equality)
%            Maximal clause size   :    8 (   3 average)
%            Number of predicates  :    3 (   0 propositional; 2-4 arity)
%            Number of functors    :   12 (   7 constant; 0-6 arity)
%            Number of variables   :   81 (   3 singleton)
%            Maximal term depth    :    2 (   1 average)
% SPC      : CNF_UNS_RFO_SEQ_NHN

% Comments :
%          : tptp2X 
%------------------------------------------------------------------------------
cnf(reflexivity_for_equidistance,axiom,
    ( equidistant(X,Y,Y,X) )).

cnf(transitivity_for_equidistance,axiom,
    ( ~ equidistant(X,Y,Z,V) | ~ equidistant(X,Y,V2,W) | equidistant(Z,V,V2,W) )).

cnf(identity_for_equidistance,axiom,
    ( ~ equidistant(X,Y,Z,Z) | X = Y )).

cnf(segment_construction1,axiom,
    ( between(X,Y,extension(X,Y,W,V)) )).

cnf(segment_construction2,axiom,
    ( equidistant(Y,extension(X,Y,W,V),W,V) )).

cnf(outer_five_segment,axiom,
    ( ~ equidistant(X,Y,X1,Y1) | ~ equidistant(Y,Z,Y1,Z1) | ~ equidistant(X,V,X1,V1) | ~ equidistant(Y,V,Y1,V1) | ~ between(X,Y,Z) | ~ between(X1,Y1,Z1) | X = Y | equidistant(Z,V,Z1,V1) )).

cnf(identity_for_betweeness,axiom,
    ( ~ between(X,Y,X) | X = Y )).

cnf(inner_pasch1,axiom,
    ( ~ between(U,V,W) | ~ between(Y,X,W) | between(V,inner_pasch(U,V,W,X,Y),Y) )).

cnf(inner_pasch2,axiom,
    ( ~ between(U,V,W) | ~ between(Y,X,W) | between(X,inner_pasch(U,V,W,X,Y),U) )).

cnf(lower_dimension1,axiom,
    ( ~ between(lower_dimension_point_1,lower_dimension_point_2,lower_dimension_point_3) )).

cnf(lower_dimension2,axiom,
    ( ~ between(lower_dimension_point_2,lower_dimension_point_3,lower_dimension_point_1) )).

cnf(lower_dimension3,axiom,
    ( ~ between(lower_dimension_point_3,lower_dimension_point_1,lower_dimension_point_2) )).

cnf(upper_dimension,axiom,
    ( ~ equidistant(X,W,X,V) | ~ equidistant(Y,W,Y,V) | ~ equidistant(Z,W,Z,V) | between(X,Y,Z) | between(Y,Z,X) | between(Z,X,Y) | W = V )).

cnf(euclid1,axiom,
    ( ~ between(U,W,Y) | ~ between(V,W,X) | U = W | between(U,V,euclid1(U,V,W,X,Y)) )).

cnf(euclid2,axiom,
    ( ~ between(U,W,Y) | ~ between(V,W,X) | U = W | between(U,X,euclid2(U,V,W,X,Y)) )).

cnf(euclid3,axiom,
    ( ~ between(U,W,Y) | ~ between(V,W,X) | U = W | between(euclid1(U,V,W,X,Y),Y,euclid2(U,V,W,X,Y)) )).

cnf(continuity1,axiom,
    ( ~ equidistant(U,V,U,V1) | ~ equidistant(U,X,U,X1) | ~ between(U,V,X) | ~ between(V,W,X) | between(V1,continuous(U,V,V1,W,X,X1),X1) )).

cnf(continuity2,axiom,
    ( ~ equidistant(U,V,U,V1) | ~ equidistant(U,X,U,X1) | ~ between(U,V,X) | ~ between(V,W,X) | equidistant(U,W,U,continuous(U,V,V1,W,X,X1)) )).

cnf(d1,axiom,
    ( equidistant(U,V,U,V) )).

cnf(d2,axiom,
    ( ~ equidistant(U,V,W,X) | equidistant(W,X,U,V) )).

cnf(d3,axiom,
    ( ~ equidistant(U,V,W,X) | equidistant(V,U,W,X) )).

cnf(u_to_v_equals_w_to_x,hypothesis,
    ( equidistant(u,v,w,x) )).

cnf(prove_symmetry,negated_conjecture,
    ( ~ equidistant(v,u,x,w) )).
%------------------------------------------------------------------------------
