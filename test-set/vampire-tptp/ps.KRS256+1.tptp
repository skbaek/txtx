%------------------------------------------------------------------------------
% File     : KRS256+1 : TPTP v7.3.0. Bugfixed v5.4.0.
% Domain   : Knowledge Representation
% Problem  : ESA mighta THM
% Version  : [Sut08] axioms.
% English  :

% Refs     : [Sut08] Sutcliffe (2008), The SZS Ontologies for Automated Rea
% Source   : [TPTP]
% Names    :

% Status   : Theorem
% Rating   : 0.06 v7.3.0, 0.14 v7.2.0, 0.00 v7.0.0, 0.07 v6.3.0, 0.08 v6.2.0, 0.18 v6.1.0, 0.16 v6.0.0, 0.25 v5.5.0, 0.29 v5.4.0
% Syntax   : Number of formulae    :   33 (   3 unit)
%            Number of atoms       :  107 (   0 equality)
%            Maximal formula depth :   10 (   6 average)
%            Number of connectives :   96 (  22   ~;   1   |;  35   &)
%                                         (  28 <=>;   8  =>;   0  <=;   2 <~>)
%                                         (   0  ~|;   0  ~&)
%            Number of predicates  :    7 (   0 propositional; 2-3 arity)
%            Number of functors    :   20 (  19 constant; 0-1 arity)
%            Number of variables   :  122 (   0 sgn;  72   !;  50   ?)
%            Maximal term depth    :    2 (   1 average)
% SPC      : FOF_THM_RFO_NEQ

% Comments :
%          : tptp2X 
% Bugfixes : v5.4.0 - Added missing axiom in KRS001+1.ax
%------------------------------------------------------------------------------
fof(unp,axiom,(
    ! [Ax,C] : 
      ( ( ~ ( ? [I1] : model(I1,Ax) )
       => ~ ( ? [I2] : model(I2,C) ) )
    <=> status(Ax,C,unp) ) )).

fof(sap,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
       => ? [I2] : model(I2,C) )
    <=> status(Ax,C,sap) ) )).

fof(esa,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
      <=> ? [I2] : model(I2,C) )
    <=> status(Ax,C,esa) ) )).

fof(sat,axiom,(
    ! [Ax,C] : 
      ( ? [I1] : 
          ( model(I1,Ax)
          & model(I1,C) )
    <=> status(Ax,C,sat) ) )).

fof(thm,axiom,(
    ! [Ax,C] : 
      ( ! [I1] : 
          ( model(I1,Ax)
         => model(I1,C) )
    <=> status(Ax,C,thm) ) )).

fof(eqv,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
        & ! [I2] : 
            ( model(I2,Ax)
          <=> model(I2,C) ) )
    <=> status(Ax,C,eqv) ) )).

fof(tac,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
        & ! [I2] : model(I2,C) )
    <=> status(Ax,C,tac) ) )).

fof(wec,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
        & ! [I2] : 
            ( model(I2,Ax)
           => model(I2,C) )
        & ? [I3] : 
            ( model(I3,C)
            & ~ model(I3,Ax) ) )
    <=> status(Ax,C,wec) ) )).

fof(eth,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
        & ? [I2] : 
            ~ model(I2,Ax)
        & ! [I3] : 
            ( model(I3,Ax)
          <=> model(I3,C) ) )
    <=> status(Ax,C,eth) ) )).

fof(tau,axiom,(
    ! [Ax,C] : 
      ( ! [I1] : 
          ( model(I1,Ax)
          & model(I1,C) )
    <=> status(Ax,C,tau) ) )).

fof(wtc,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
        & ? [I2] : 
            ~ model(I2,Ax)
        & ! [I3] : model(I3,C) )
    <=> status(Ax,C,wtc) ) )).

fof(wth,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : model(I1,Ax)
        & ! [I2] : 
            ( model(I2,Ax)
           => model(I2,C) )
        & ? [I3] : 
            ( model(I3,C)
            & ~ model(I3,Ax) )
        & ? [I4] : 
            ~ model(I4,C) )
    <=> status(Ax,C,wth) ) )).

fof(cax,axiom,(
    ! [Ax,C] : 
      ( ~ ( ? [I1] : model(I1,Ax) )
    <=> status(Ax,C,cax) ) )).

fof(sca,axiom,(
    ! [Ax,C] : 
      ( ( ~ ( ? [I1] : model(I1,Ax) )
        & ? [I2] : model(I2,C) )
    <=> status(Ax,C,sca) ) )).

fof(tca,axiom,(
    ! [Ax,C] : 
      ( ( ~ ( ? [I1] : model(I1,Ax) )
        & ! [I2] : model(I2,C) )
    <=> status(Ax,C,tca) ) )).

fof(wca,axiom,(
    ! [Ax,C] : 
      ( ( ~ ( ? [I1] : model(I1,Ax) )
        & ? [I2] : model(I2,C)
        & ? [I3] : 
            ~ model(I3,C) )
    <=> status(Ax,C,wca) ) )).

fof(csa,axiom,(
    ! [Ax,C] : 
      ( ? [I1] : 
          ( model(I1,Ax)
          & model(I1,not(C)) )
    <=> status(Ax,C,csa) ) )).

fof(uns,axiom,(
    ! [Ax,C] : 
      ( ( ! [I1] : model(I1,Ax)
        & ! [I2] : model(I2,not(C)) )
    <=> status(Ax,C,uns) ) )).

fof(noc,axiom,(
    ! [Ax,C] : 
      ( ( ? [I1] : 
            ( model(I1,Ax)
            & model(I1,C) )
        & ? [I2] : 
            ( model(I2,Ax)
            & model(I2,not(C)) ) )
    <=> status(Ax,C,noc) ) )).

fof(mighta,axiom,(
    ! [S1,S2] : 
      ( ? [Ax,C] : 
          ( status(Ax,C,S1)
          & status(Ax,C,S2) )
    <=> mighta(S1,S2) ) )).

fof(isa,axiom,(
    ! [S1,S2] : 
      ( ! [Ax,C] : 
          ( status(Ax,C,S1)
         => status(Ax,C,S2) )
    <=> isa(S1,S2) ) )).

fof(nota,axiom,(
    ! [S1,S2] : 
      ( ? [Ax,C] : 
          ( status(Ax,C,S1)
          & ~ status(Ax,C,S2) )
    <=> nota(S1,S2) ) )).

fof(nevera,axiom,(
    ! [S1,S2] : 
      ( ! [Ax,C] : 
          ( status(Ax,C,S1)
         => ~ status(Ax,C,S2) )
    <=> nevera(S1,S2) ) )).

fof(xora,axiom,(
    ! [S1,S2] : 
      ( ! [Ax,C] : 
          ( status(Ax,C,S1)
        <~> status(Ax,C,S2) )
    <=> xora(S1,S2) ) )).

fof(completeness,axiom,(
    ! [I,F] : 
      ( model(I,F)
    <~> model(I,not(F)) ) )).

fof(not,axiom,(
    ! [I,F] : 
      ( model(I,F)
    <=> ~ model(I,not(F)) ) )).

fof(tautology,axiom,(
    ? [F] : 
    ! [I] : model(I,F) )).

fof(satisfiable,axiom,(
    ? [F] : 
      ( ? [I1] : model(I1,F)
      & ? [I2] : 
          ~ model(I2,F) ) )).

fof(contradiction,axiom,(
    ? [F] : 
    ! [I] : 
      ~ model(I,F) )).

fof(sat_non_taut_pair,axiom,(
    ? [Ax,C] : 
      ( ? [I1] : 
          ( model(I1,Ax)
          & model(I1,C) )
      & ? [I2] : 
          ( ~ model(I2,Ax)
          | ~ model(I2,C) ) ) )).

fof(mixed_pair,axiom,(
    ? [Ax,C] : 
      ( ? [I1] : model(I1,Ax)
      & ! [I2] : 
          ( model(I2,Ax)
         => model(I2,C) )
      & ? [I3] : 
          ( ~ model(I3,Ax)
          & model(I3,C) )
      & ? [I4] : 
          ~ model(I4,C) ) )).

fof(non_thm_spt,axiom,(
    ? [I1,Ax,C] : 
      ( model(I1,Ax)
      & ~ model(I1,C)
      & ? [I2] : model(I2,C) ) )).

fof(mighta_esa_thm,conjecture,(
    mighta(esa,thm) )).
%------------------------------------------------------------------------------
