%------------------------------------------------------------------------------
% File     : NUM500+3 : TPTP v7.3.0. Released v4.0.0.
% Domain   : Number Theory
% Problem  : Square root of a prime is irrational 14_03_03_01, 02 expansion
% Version  : Especial.
% English  :

% Refs     : [LPV06] Lyaletski et al. (2006), SAD as a Mathematical Assista
%          : [VLP07] Verchinine et al. (2007), System for Automated Deduction
%          : [Pas08] Paskevich (2008), Email to G. Sutcliffe
% Source   : [Pas08]
% Names    : primes_14_03_03_01.02 [Pas08]

% Status   : Theorem
% Rating   : 0.20 v7.3.0, 0.24 v7.2.0, 0.21 v7.1.0, 0.22 v7.0.0, 0.23 v6.4.0, 0.31 v6.3.0, 0.29 v6.2.0, 0.28 v6.1.0, 0.30 v6.0.0, 0.26 v5.5.0, 0.37 v5.4.0, 0.43 v5.3.0, 0.44 v5.2.0, 0.30 v5.1.0, 0.38 v5.0.0, 0.46 v4.1.0, 0.57 v4.0.1, 0.78 v4.0.0
% Syntax   : Number of formulae    :   48 (   1 unit)
%            Number of atoms       :  254 (  88 equality)
%            Maximal formula depth :   16 (   6 average)
%            Number of connectives :  239 (  33   ~;  19   |; 117   &)
%                                         (   5 <=>;  65  =>;   0  <=;   0 <~>)
%                                         (   0  ~|;   0  ~&)
%            Number of predicates  :    7 (   1 propositional; 0-2 arity)
%            Number of functors    :   10 (   6 constant; 0-2 arity)
%            Number of variables   :  101 (   0 sgn;  85   !;  16   ?)
%            Maximal term depth    :    3 (   1 average)
% SPC      : FOF_THM_RFO_SEQ

% Comments : Problem generated by the SAD system [VLP07]
%          : tptp2X 
%------------------------------------------------------------------------------
fof(mNatSort,axiom,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => $true ) )).

fof(mSortsC,axiom,(
    aNaturalNumber0(sz00) )).

fof(mSortsC_01,axiom,
    ( aNaturalNumber0(sz10)
    & sz10 != sz00 )).

fof(mSortsB,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => aNaturalNumber0(sdtpldt0(W0,W1)) ) )).

fof(mSortsB_02,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => aNaturalNumber0(sdtasdt0(W0,W1)) ) )).

fof(mAddComm,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => sdtpldt0(W0,W1) = sdtpldt0(W1,W0) ) )).

fof(mAddAsso,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => sdtpldt0(sdtpldt0(W0,W1),W2) = sdtpldt0(W0,sdtpldt0(W1,W2)) ) )).

fof(m_AddZero,axiom,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => ( sdtpldt0(W0,sz00) = W0
        & W0 = sdtpldt0(sz00,W0) ) ) )).

fof(mMulComm,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => sdtasdt0(W0,W1) = sdtasdt0(W1,W0) ) )).

fof(mMulAsso,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => sdtasdt0(sdtasdt0(W0,W1),W2) = sdtasdt0(W0,sdtasdt0(W1,W2)) ) )).

fof(m_MulUnit,axiom,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => ( sdtasdt0(W0,sz10) = W0
        & W0 = sdtasdt0(sz10,W0) ) ) )).

fof(m_MulZero,axiom,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => ( sdtasdt0(W0,sz00) = sz00
        & sz00 = sdtasdt0(sz00,W0) ) ) )).

fof(mAMDistr,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( sdtasdt0(W0,sdtpldt0(W1,W2)) = sdtpldt0(sdtasdt0(W0,W1),sdtasdt0(W0,W2))
        & sdtasdt0(sdtpldt0(W1,W2),W0) = sdtpldt0(sdtasdt0(W1,W0),sdtasdt0(W2,W0)) ) ) )).

fof(mAddCanc,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( ( sdtpldt0(W0,W1) = sdtpldt0(W0,W2)
          | sdtpldt0(W1,W0) = sdtpldt0(W2,W0) )
       => W1 = W2 ) ) )).

fof(mMulCanc,axiom,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => ( W0 != sz00
       => ! [W1,W2] : 
            ( ( aNaturalNumber0(W1)
              & aNaturalNumber0(W2) )
           => ( ( sdtasdt0(W0,W1) = sdtasdt0(W0,W2)
                | sdtasdt0(W1,W0) = sdtasdt0(W2,W0) )
             => W1 = W2 ) ) ) ) )).

fof(mZeroAdd,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( sdtpldt0(W0,W1) = sz00
       => ( W0 = sz00
          & W1 = sz00 ) ) ) )).

fof(mZeroMul,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( sdtasdt0(W0,W1) = sz00
       => ( W0 = sz00
          | W1 = sz00 ) ) ) )).

fof(mDefLE,definition,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( sdtlseqdt0(W0,W1)
      <=> ? [W2] : 
            ( aNaturalNumber0(W2)
            & sdtpldt0(W0,W2) = W1 ) ) ) )).

fof(mDefDiff,definition,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( sdtlseqdt0(W0,W1)
       => ! [W2] : 
            ( W2 = sdtmndt0(W1,W0)
          <=> ( aNaturalNumber0(W2)
              & sdtpldt0(W0,W2) = W1 ) ) ) ) )).

fof(mLERefl,axiom,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => sdtlseqdt0(W0,W0) ) )).

fof(mLEAsym,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( ( sdtlseqdt0(W0,W1)
          & sdtlseqdt0(W1,W0) )
       => W0 = W1 ) ) )).

fof(mLETran,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( ( sdtlseqdt0(W0,W1)
          & sdtlseqdt0(W1,W2) )
       => sdtlseqdt0(W0,W2) ) ) )).

fof(mLETotal,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( sdtlseqdt0(W0,W1)
        | ( W1 != W0
          & sdtlseqdt0(W1,W0) ) ) ) )).

fof(mMonAdd,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( ( W0 != W1
          & sdtlseqdt0(W0,W1) )
       => ! [W2] : 
            ( aNaturalNumber0(W2)
           => ( sdtpldt0(W2,W0) != sdtpldt0(W2,W1)
              & sdtlseqdt0(sdtpldt0(W2,W0),sdtpldt0(W2,W1))
              & sdtpldt0(W0,W2) != sdtpldt0(W1,W2)
              & sdtlseqdt0(sdtpldt0(W0,W2),sdtpldt0(W1,W2)) ) ) ) ) )).

fof(mMonMul,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( ( W0 != sz00
          & W1 != W2
          & sdtlseqdt0(W1,W2) )
       => ( sdtasdt0(W0,W1) != sdtasdt0(W0,W2)
          & sdtlseqdt0(sdtasdt0(W0,W1),sdtasdt0(W0,W2))
          & sdtasdt0(W1,W0) != sdtasdt0(W2,W0)
          & sdtlseqdt0(sdtasdt0(W1,W0),sdtasdt0(W2,W0)) ) ) ) )).

fof(mLENTr,axiom,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => ( W0 = sz00
        | W0 = sz10
        | ( sz10 != W0
          & sdtlseqdt0(sz10,W0) ) ) ) )).

fof(mMonMul2,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( W0 != sz00
       => sdtlseqdt0(W1,sdtasdt0(W1,W0)) ) ) )).

fof(mIH,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( iLess0(W0,W1)
       => $true ) ) )).

fof(mIH_03,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( ( W0 != W1
          & sdtlseqdt0(W0,W1) )
       => iLess0(W0,W1) ) ) )).

fof(mDefDiv,definition,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( doDivides0(W0,W1)
      <=> ? [W2] : 
            ( aNaturalNumber0(W2)
            & W1 = sdtasdt0(W0,W2) ) ) ) )).

fof(mDefQuot,definition,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( ( W0 != sz00
          & doDivides0(W0,W1) )
       => ! [W2] : 
            ( W2 = sdtsldt0(W1,W0)
          <=> ( aNaturalNumber0(W2)
              & W1 = sdtasdt0(W0,W2) ) ) ) ) )).

fof(mDivTrans,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( ( doDivides0(W0,W1)
          & doDivides0(W1,W2) )
       => doDivides0(W0,W2) ) ) )).

fof(mDivSum,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( ( doDivides0(W0,W1)
          & doDivides0(W0,W2) )
       => doDivides0(W0,sdtpldt0(W1,W2)) ) ) )).

fof(mDivMin,axiom,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( ( doDivides0(W0,W1)
          & doDivides0(W0,sdtpldt0(W1,W2)) )
       => doDivides0(W0,W2) ) ) )).

fof(mDivLE,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( ( doDivides0(W0,W1)
          & W1 != sz00 )
       => sdtlseqdt0(W0,W1) ) ) )).

fof(mDivAsso,axiom,(
    ! [W0,W1] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1) )
     => ( ( W0 != sz00
          & doDivides0(W0,W1) )
       => ! [W2] : 
            ( aNaturalNumber0(W2)
           => sdtasdt0(W2,sdtsldt0(W1,W0)) = sdtsldt0(sdtasdt0(W2,W1),W0) ) ) ) )).

fof(mDefPrime,definition,(
    ! [W0] : 
      ( aNaturalNumber0(W0)
     => ( isPrime0(W0)
      <=> ( W0 != sz00
          & W0 != sz10
          & ! [W1] : 
              ( ( aNaturalNumber0(W1)
                & doDivides0(W1,W0) )
             => ( W1 = sz10
                | W1 = W0 ) ) ) ) ) )).

fof(mPrimDiv,axiom,(
    ! [W0] : 
      ( ( aNaturalNumber0(W0)
        & W0 != sz00
        & W0 != sz10 )
     => ? [W1] : 
          ( aNaturalNumber0(W1)
          & doDivides0(W1,W0)
          & isPrime0(W1) ) ) )).

fof(m__1837,hypothesis,
    ( aNaturalNumber0(xn)
    & aNaturalNumber0(xm)
    & aNaturalNumber0(xp) )).

fof(m__1799,hypothesis,(
    ! [W0,W1,W2] : 
      ( ( aNaturalNumber0(W0)
        & aNaturalNumber0(W1)
        & aNaturalNumber0(W2) )
     => ( ( ( ( W2 != sz00
              & W2 != sz10
              & ! [W3] : 
                  ( ( aNaturalNumber0(W3)
                    & ? [W4] : 
                        ( aNaturalNumber0(W4)
                        & W2 = sdtasdt0(W3,W4) )
                    & doDivides0(W3,W2) )
                 => ( W3 = sz10
                    | W3 = W2 ) ) )
            | isPrime0(W2) )
          & ( ? [W3] : 
                ( aNaturalNumber0(W3)
                & sdtasdt0(W0,W1) = sdtasdt0(W2,W3) )
            | doDivides0(W2,sdtasdt0(W0,W1)) ) )
       => ( iLess0(sdtpldt0(sdtpldt0(W0,W1),W2),sdtpldt0(sdtpldt0(xn,xm),xp))
         => ( ( ? [W3] : 
                  ( aNaturalNumber0(W3)
                  & W0 = sdtasdt0(W2,W3) )
              & doDivides0(W2,W0) )
            | ( ? [W3] : 
                  ( aNaturalNumber0(W3)
                  & W1 = sdtasdt0(W2,W3) )
              & doDivides0(W2,W1) ) ) ) ) ) )).

fof(m__1860,hypothesis,
    ( xp != sz00
    & xp != sz10
    & ! [W0] : 
        ( ( aNaturalNumber0(W0)
          & ( ? [W1] : 
                ( aNaturalNumber0(W1)
                & xp = sdtasdt0(W0,W1) )
            | doDivides0(W0,xp) ) )
       => ( W0 = sz10
          | W0 = xp ) )
    & isPrime0(xp)
    & ? [W0] : 
        ( aNaturalNumber0(W0)
        & sdtasdt0(xn,xm) = sdtasdt0(xp,W0) )
    & doDivides0(xp,sdtasdt0(xn,xm)) )).

fof(m__1870,hypothesis,(
    ~ ( ? [W0] : 
          ( aNaturalNumber0(W0)
          & sdtpldt0(xp,W0) = xn )
      | sdtlseqdt0(xp,xn) ) )).

fof(m__2075,hypothesis,(
    ~ ( ? [W0] : 
          ( aNaturalNumber0(W0)
          & sdtpldt0(xp,W0) = xm )
      | sdtlseqdt0(xp,xm) ) )).

fof(m__2287,hypothesis,
    ( xn != xp
    & ? [W0] : 
        ( aNaturalNumber0(W0)
        & sdtpldt0(xn,W0) = xp )
    & sdtlseqdt0(xn,xp)
    & xm != xp
    & ? [W0] : 
        ( aNaturalNumber0(W0)
        & sdtpldt0(xm,W0) = xp )
    & sdtlseqdt0(xm,xp) )).

fof(m__2306,hypothesis,
    ( aNaturalNumber0(xk)
    & sdtasdt0(xn,xm) = sdtasdt0(xp,xk)
    & xk = sdtsldt0(sdtasdt0(xn,xm),xp) )).

fof(m__2315,hypothesis,(
    ~ ( xk = sz00
      | xk = sz10 ) )).

fof(m__2327,hypothesis,
    ( xk != sz00
    & xk != sz10 )).

fof(m__,conjecture,(
    ? [W0] : 
      ( aNaturalNumber0(W0)
      & ( ? [W1] : 
            ( aNaturalNumber0(W1)
            & xk = sdtasdt0(W0,W1) )
        | doDivides0(W0,xk) )
      & ( ( W0 != sz00
          & W0 != sz10
          & ! [W1] : 
              ( ( aNaturalNumber0(W1)
                & ? [W2] : 
                    ( aNaturalNumber0(W2)
                    & W0 = sdtasdt0(W1,W2) )
                & doDivides0(W1,W0) )
             => ( W1 = sz10
                | W1 = W0 ) ) )
        | isPrime0(W0) ) ) )).
%------------------------------------------------------------------------------
